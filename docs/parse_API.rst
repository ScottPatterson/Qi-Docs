Parse API calls
==================


The API calls in this section are all used to ...
See `Parse introduction <https://qi-docs-rst.readthedocs.org/en/latest/parse_intro.html>`__ for an introduction to Parse.


***********************

``GET api/tenants/{tenantId}/devices/count``
--------------------------------------------

Returns the number of devices for a tenant.Â  


**Parameters**

``tenantId``
  A unique Id for the Tenant


**Returns**
  Integer count of the number of devices found. 
 
***********************

``GET api/tenants/{tenantId}/devices``
--------------------------------------------

Returns all devices for a tenant. 

**Parameters**

``tenantId``
  Unique ID for the tenant. 

**Returns**

  A list of Device objects found. 

************************

``GET api/tenants/{tenantId}/devices/{deviceId}``
--------------------------------------------

Get a specific device. 

**Parameters**

``tenantId``
 Unique ID for the tenant. 
``deviceId``
  Unique ID for the device. 

**Returns**

  The Device object found.  

***************************

``POST api/tenants/{tenantId}/device``
-------------------------------------

Creates or updates a device. The revocation status of a device may be updated. An expiration time may be specified to generate a new token. If not specified, the default time of 50 years will be used. 

Parameters: 

``tenantId``
  Unique ID for the tenant. 

**Body**
  A Device object.  

**Returns**

  A Device object. 

******************************

``POST api/tenants/{tenantId}/devices``
---------------------------------------

Creates or updates multiple devices. The revocation status of devices may be updated. An expiration time may be specified to generate new tokens. If not specified, the default time of 50 years will be used. 

**Parameters**

``tenantId``
  Unique ID for the tenant. 

**Body**
  An array of Device objects. 

**Returns**
  An array of Device objects. 

************************************

``DELETE api/tenants/{tenantId}/devices/{deviceId}``
---------------------------------------------------

Deletes a device. 

**Parameters**

``tenantId`` 
  Unique ID for the tenant. 
``deviceId``
  Unique ID for the device. 

********************************

Publications 
============

Publication information 
-----------------------

A Publication is used to aggregate data received from devices and make it available for consumption via a Subscription.  A publication must contain at least one device. Devices may be added to or removed from an existing publication. A given device may also belong to multiple publications. 

When a publication is created, data sent from its assigned devices is routed to a special queue where it can be consumed by a subscription. This queue provides a buffer of up to 1 day for subscriptions which are temporarily unable to receive data. 

Publication API calls 
---------------------

The API calls in this section are used to create and manipulate publications.  

Data Models 
-----------

Publication information is contained in an object called Publication and has the following format: 


+-----------------+-------------------------+----------------------------------------+
| Property        | Type                    | Details                                |
+=================+=========================+========================================+
| TenantId        | string                  | Identifies the owner of the            |
|                 |                         | publication                            |
+-----------------+-------------------------+----------------------------------------+
| PublicationId   | string                  | Unique ID generated by the API during  |
|                 |                         | creation                               |
+-----------------+-------------------------+----------------------------------------+
| PublicationName | string                  | A friendly name for the Publication    |
+-----------------+-------------------------+----------------------------------------+
| Description     | string                  | An optional description for the        |
|                 |                         | Publication.                           |
+-----------------+-------------------------+----------------------------------------+

Information about a publication and its mapped devices is contained in an object 
called ``MappedPublication`` which extends Publication: 

+-----------------+-------------------------+----------------------------------------+
| Property        | Type                    | Details                                |
+=================+=========================+========================================+
| DeviceId        | string                  | Unique Id for the device               |
+-----------------+-------------------------+----------------------------------------+
| PublicationId   | string                  | Unique ID for the Publication          |
+-----------------+-------------------------+----------------------------------------+

********************************

``GET api/tenants/{tenantId}/publications/count``
------------------------------------------------

Get the number of publications for a tenant. 

**Parameters**

``tenantId``
  Unique ID for the tenant. 

**Returns**
  An integer. 

**************************

``GET api/tenants/{tenantId}/publications/{publicationId}``

Get a specific publication. 

**Parameters**
``tenantId``
  Unique ID for the tenant. 
``publicationId``
  Unique ID for the device. 

**Returns**
  A Publication object. 

**************************

``GET api/tenants/{tenantId}/publications``
-------------------------------------------

Get all publications for a tenant. 

**Parameters**
``tenantId``
  Unique ID for the tenant. 

**Returns**
  An array of Publication objects. 

************************

``GET api/tenants/{tenantId}/devicepublicationmappings/device/{deviceId}``
--------------------------------------------------------------------------

Gets a list of publications that a device is currently mapped to. 

**Parameters**

``tenantId``
  Unique ID for the tenant. 
``deviceId``
  Unique ID for the device. 

**Returns**
  An array of Publication objects. 

****************************

``GET api/tenants/{tenantId}/devicepublicationmappings/publication/{publicationId}``

Gets a list of devices that are currently mapped to a publication 

**Parameters**
``tenantId``
  Unique ID for the tenant. 
``publicationId``
  Unique ID for the device. 

**Returns**
  An array of Device objects. 

***************************

``POST api/tenants/{tenantId}/publication``
-----------------------------------------

Creates or updates a publication. Only the publication name and description can be updated. 

**Parameters**

``tenantId``
  Unique ID for the tenant. 

**Body**
  A MappedPublication object. 

**Returns**
  A MappedPublication object. 


***********************

``POST api/tenants/{tenantId}/publications``

Creates or updates multiple publication. Only the publication name and description can be updated. 

**Parameters**

``tenantId``
  Unique ID for the tenant. 

**Body**
  An array of MappedPublication objects. 

**Returns**
  An array of MappedPublication objects. 

**********************

``POST api/tenants/{tenantId}/devicepublicationmapping``

Creates a mapping between a device and publication. 

**Parameters**

``tenantId``
  Unique ID for the tenant. 

**Body**
  A MappedDevice object. 

**Returns**
  A MappedDevice object. 

**********************

``POST api/tenants/{tenantId}/devicepublicationmappings``

Creates multiple mappings between devices and publications 

**Parameters**

``tenantId``
  Unique ID for the tenant. 

**Body**
  An array of MappedDevice objects. 

**Returns** 
  An array of MappedDevice objects. 

************************

``DELETE api/tenants/{tenantId}/devicepublicationmappings/{publicationId}``

Delete mappings between a publication and multiple devices. 

**Parameters**

``tenantId``
  Unique ID for the tenant. 
``publicationId``
  Unique ID for the publication. 

**Body**
  A string array of Device IDs to remove from the Publication. 


**************************

``DELETE api/tenants/{tenantId}/publications/{publicationId}``

Delete a publication. 

**Parameters**

``tenantId``
  Unique ID for the tenant. 
``publicationId``
  Unique ID for the publication. 

************************

Subscriptions 
=============

Subscription information A Subscription is used to consume data from a publication. Multiple subscriptions can retrieve data from a single publication.  

There are two types of Subscriptions with different behaviors. 

Standard Subscription 
---------------------

A Standard Subscription provides an endpoint for an external application to query. It maintains a bookmark into the publication queue and serves up data in sequence.  

A token is generated with a Standard Subscription and is used by the external application to authenticate to the subscription. This token is similar to the token used for Devices, but containing different information: 

  * Subscription ID: This is a unique identifier for the subscription which is generated by the API. 
  * Invitation ID: Currently not used. 
  * Expiration Time: This determines when the security token expires. 
  * Signature: This is a cryptographic signature that verifies that the token is legitimate and has not been tampered with. It uses the HMAC-SHA256 algorithm. 

The API for querying a Standard Subscription will be covered elsewhere. 

Qi Subscription 
---------------

A Qi Subscription retrieves data from a publication and writes it directly to a namespace in Qi. No tokens are exposed to users because an external application is not allowed to read from this subscription. 

Subscription API calls 
----------------------

The API calls in this section are used to create and manipulate subscriptions.  

Data Models 
-----------

Subscription information is contained in an object called Subscription which has the following format: 

+----------------------+-------------------------+----------------------------------------+
| Property             | Type                    | Details                                |
+======================+=========================+========================================+
| SubscriptionId       | string                  | Unique ID generated by the API during  |
|                      |                         | creation.                              |
+----------------------+-------------------------+----------------------------------------+
| SubscriptionName     | string                  | A friendly name for the Subscription.  |
+----------------------+-------------------------+----------------------------------------+
| PublicationId        | string                  | Unique ID for the Publication we are   |
|                      |                         | subscribing to.                        |
+----------------------+-------------------------+----------------------------------------+
| PublicationTenantId  | string                  | Identifies the owner of the            |
|                      |                         | Publication.                           |
+----------------------+-------------------------+----------------------------------------+
| SubscriptionTenantId | string                  | Identifies the owner of the            |
|                      |                         | Subscription.                          |
+----------------------+-------------------------+----------------------------------------+
| IsRevoked            | string                  | Revocation status of the Subscription. |
+----------------------+-------------------------+----------------------------------------+
| SubscriptionType     | string                  | An enumeration where Standared=0, Qi=1.|
+----------------------+-------------------------+----------------------------------------+






