Devices
==================

A Device is a logical construct which is used by OSIsoft Cloud Services (OCS) to authenticate 
and categorize OSIsoft Message Format (OMF) messages. When a device is registered using the API, 
a security token is generated and returned to the caller. The token must be added to the headers 
of OMF messages that are sent to OCS. If a device is revoked, all security tokens generated 
for the Device become invalid. 

While OMF messages may be sent to OCS immediately after provisioning a device, the messages 
cannot be made available for consumption until a Publication is created. However, some 
messages are stored for later consumption in OCS databases. See OMF documentation for more information. 

The API calls in this section are all used to manage devices. See `Introduction to Parse <https://qi-docs-rst.readthedocs.org/en/latest/parse_intro.html>`__ for more information.

Tokens
------

The security token generated during device creation is a bearer token, which means that any 
client that presents the token will be able to authenticate as that device, assuming the 
token is valid. Because of this, it is imperative that the token be stored in a secure 
location that is accessible only to the application that is sending data. If the security 
token is ever compromised, it is possible for an unauthorized client to impersonate the device 
until the token expires or is revoked. 

The security token contains information that uniquely 
identifies the device. The following information is contained in the token: 

  * Device Id: A unique Id for the device. The Id is generated by the API. 
  * Tenant Id: This Id identifies the owner of the device. 
  * Expiration Time: This determines when the security token expires. 
  * Signature: This is a cryptographic signature that verifies that the token is legitimate 
    and has not been tampered with. The signature uses the HMAC-SHA256 algorithm. 

The security token should never be transported over an unsecure network connection. If, for example, 
you have a separate management service that performs token registration and renewal with the 
API and then pushes the token down to the device that generates OMF messages, you must ensure that
your network connection to the device uses SSL/TLS or another secure protocol. 

Because each OMF message contains the token, never send OMF data to a service that does not 
implement SSL/TLS or other secure protocol. It is recommended that you keep token expiration times 
short and to have your application renew the token before it expires. For example, you could 
specify that the token expires after 24 hours and have your application renew the token every 
12 hours. By following this example, if the token is compromised, you limit the amount of time 
the token is valid. 

Data Models 
-----------

Device information is contained in an object called ``Device`` and has the following format: 

+-----------------+-------------------------+----------------------------------------+
| Property        | Type                    | Details                                |
+=================+=========================+========================================+
| TenantId        | string                  | Identifies the owner of the device.    |
+-----------------+-------------------------+----------------------------------------+
| DeviceId        | string                  | A unique ID generated by the API when  |
|                 |                         | the device is created.                 |
+-----------------+-------------------------+----------------------------------------+
| DeviceName      | string                  | A friendly name for the device.        |
+-----------------+-------------------------+----------------------------------------+
| Revoked         | boolean                 | If a Device is revoked, any clients    |
|                 |                         | associated with the Device token are   |
|                 |                         | prevented from sending data.           |
+-----------------+-------------------------+----------------------------------------+
| ProducerToken   | string                  | A set of claims along with a           |
|                 |                         | cryptographic signature that verifies  |
|                 |                         | that the token is legitimate and has   |
|                 |                         | not been tampered with. It is used     |
|                 |                         | when building OMF messages that are    |
|                 |                         | sent to the OCS.                       |
+-----------------+-------------------------+----------------------------------------+
| TokenExpiration | string                  | The time that the ProducerToken will   |
|                 |                         | expire. The string is formatted using  |
|                 |                         | ISO 8601 format.                       |
+-----------------+-------------------------+----------------------------------------+


***********************

``GET api/tenants/{tenantId}/devices/count``
--------------------------------------------

Returns the number of devices assigned for a specified tenant.  


**Parameters**

``tenantId``
  A unique Id for the Tenant


**Returns**

Integer count of the number of devices found. 
 
***********************

``GET api/tenants/{tenantId}/devices``
--------------------------------------------

Returns all devices for a tenant. 

**Parameters**

``tenantId``
  Unique Id for the tenant. 

**Returns**

  A list of Device objects found. 

************************

``GET api/tenants/{tenantId}/devices/{deviceId}``
--------------------------------------------

Get a specific device. 

**Parameters**

``tenantId``
 Unique Id for the tenant. 
``deviceId``
  Unique Id for the device. 

**Returns**

  The Device object found.  

***************************

``POST api/tenants/{tenantId}/device``
-------------------------------------

Creates or updates a device. The revocation status of a device may be updated. An expiration time may be specified to generate a new token. If not specified, the default time of 50 years will be used. 

Parameters: 

``tenantId``
  Unique Id for the tenant. 

**Body**

A Device object.  

**Returns**

  A Device object. 

******************************

``POST api/tenants/{tenantId}/devices``
---------------------------------------

Creates or updates multiple devices. The revocation status of devices may be updated. An expiration time may be specified to generate new tokens. If not specified, the default time of 50 years will be used. 

**Parameters**

``tenantId``
  Unique Id for the tenant. 

**Body**
  An array of Device objects. 

**Returns**

An array of Device objects. 

************************************

``DELETE api/tenants/{tenantId}/devices/{deviceId}``
---------------------------------------------------

Deletes a device. 

**Parameters**

``tenantId`` 
  Unique Id for the tenant. 
``deviceId``
  Unique Id for the device. 

********************************
