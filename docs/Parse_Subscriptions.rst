Subscriptions 
=============

Subscription information A Subscription is used to consume data from a topic. Multiple subscriptions can retrieve data from a single topic.  

There are two types of Subscriptions with different behaviors. 

The API calls in this section are used to create and manipulate subscriptions.  

Standard Subscription 
---------------------

A Standard Subscription provides an endpoint for an external application to query. It maintains a bookmark into the topic queue and serves up data in sequence.  

A token is generated with a Standard Subscription and is used by the external application to authenticate to the subscription. This token is similar to the token used for Publishers, but containing different information: 

  * Subscription Id: This is a unique identifier for the subscription which is generated by the API. 
  * Invitation Id: Currently not used. 
  * Expiration Time: This determines when the security token expires. 
  * Signature: This is a cryptographic signature that verifies that the token is legitimate and has not been tampered with. It uses the HMAC-SHA256 algorithm. 

The API for querying a Standard Subscription will be covered elsewhere. 

Qi Subscription 
---------------

A Qi Subscription retrieves data from a topic and writes it directly to a namespace in Qi. No tokens are exposed to users because an external application is not allowed to read from this subscription. 

Data Models 
-----------

Subscription information is contained in an object called Subscription which has the following format: 

+----------------------+-------------------------+----------------------------------------+
| Property             | Type                    | Details                                |
+======================+=========================+========================================+
| SubscriptionId       | string                  | Unique Id generated by the API during  |
|                      |                         | creation.                              |
+----------------------+-------------------------+----------------------------------------+
| SubscriptionName     | string                  | A friendly name for the Subscription.  |
+----------------------+-------------------------+----------------------------------------+
| TopicId              | string                  | Unique Id for the Topic we are         |
|                      |                         | subscribing to.                        |
+----------------------+-------------------------+----------------------------------------+
| TopicTenantId        | string                  | Identifies the owner of the Topic.     |
+----------------------+-------------------------+----------------------------------------+
| SubscriptionTenantId | string                  | Identifies the owner of the            |
|                      |                         | Subscription.                          |
+----------------------+-------------------------+----------------------------------------+
| IsRevoked            | boolean                 | Revocation status of the Subscription. |
+----------------------+-------------------------+----------------------------------------+
| SubscriptionType     | integer                 | An enumeration where Standared=0, Qi=1.|
+----------------------+-------------------------+----------------------------------------+

***************

``GET api/tenants/{tenantId}/subscriptions/count``
-------------------------------------------------

Get the number of subscriptions for a tenant.  

**Parameters**

``tenantId``
  Unique Id for the tenant. 

**Returns**

An integer count of subscriptions. 

*****************

``GET api/tenants/{tenantId}/subscriptions``
---------------------------------------------

Get all subscriptions for a tenant. 

**Parameters**

``tenantId``
  Unique Id for the tenant. 

**Returns**

An array of Subscription objects. 

*********************

``GET api/tenants/{tenantId}/subscriptions/{subscriptionId}``
---------------------------------------------------------------

Get a specific subscription. 

**Parameters**

``tenantId``
  Unique Id for the tenant. 
``subscriptionId``
  Unique Id for the subscription. 

**Returns**

A Subscription object that was found. 

*************************

``GET api/tenants/{tenantId}/subscriptions/{subscriptionId}/{secondsUntilExpiration}``
---------------------------------------------------------------------------------------

Get a security token for a subscription. 

**Parameters**

``tenantId``
  Unique Id for the tenant. 
``subscriptionId``
  Unique Id for the subscription. 
``secondsUntilExpiration``
  Integer number of seconds until the token expires. 

**Returns**

A Subscription object that was found. 

*****************

``POST api/tenants/{tenantId}/subscription``
--------------------------------------------

Create or update a subscription. Only the name and description may be updated. 

**Parameters**

``tenantId``
  Unique Id for the tenant. 

**Body**

A Subscription object. 

**Returns**

A Subscription object that was created or updated. 

*******************

``POST api/tenants/{tenantId}/subscription/{qiNamespace}``
------------------------------------------------------------

Create or update a subscription with a Qi destination. Only the name and description may be updated. 

**Parameters**

``tenantId``
  Unique Id for the tenant. 
``qiNamespace``
  The namespace to be used for the Qi subscription. 

**Body**

A Subscription object. 

**Returns**

A Subscription object that was created or updated.  

*********************

``DELETE api/tenants/{tenantId}/subscriptions/{subscriptionId}``
-----------------------------------------------------------------

Delete a Subscription. 

**Parameters**

``tenantId``
  Unique Id for the tenant. 
``subscriptionId``
  Unique Id for the subscription. 
