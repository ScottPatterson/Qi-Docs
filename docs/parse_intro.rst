Introduction to Parse
=====================

Parse is an Application Programming Interface
(API) that you use to manage devices, subscriptions, publications, and security
for ingestion of OSIsoft Message Format (OMF) messages into OSIsoft Cloud
Services (OCS). You can use OMF to upload or store information in Qi.

Devices
-------

A Device is a logical construct which is used by OSIsoft Cloud Services (OCS) to authenticate 
and categorize OSIsoft Message Format (OMF) messages. When a device is registered using the API, 
a security token is generated and returned to the caller. The token must be added to the headers 
of OMF messages that are sent to OCS. If a device is revoked, all security tokens generated 
for the Device become invalid. 

While OMF messages may be sent to OCS immediately after provisioning a device, the messages 
cannot be made available for consumption until a Publication is created. However, some 
messages are stored for later consumption in OCS databases. See OMF documentation for more information. 

Tokens
------

The security token generated during device creation is a bearer token, meaning that any 
client that presents the token will be able to authenticate as that device, assuming the 
token is valid. Because of this, it is imperative that the token be stored in a secure 
location that is only accessible to the application sending data. 

If that token is ever compromised, an unauthorized client can impersonate the device 
until the token expires or is revoked. The security token contains information that uniquely 
identifies the device. The following information can be found in the token: 

  * Device ID: This is a unique ID for the device which is generated by the API. 
  * Tenant ID: This identifies the owner of the device. 
  * Expiration Time: This determines when the security token expires. 
  * Signature: This is a cryptographic signature that verifies that the token is legitimate 
    and has not been tampered with. The signature uses the HMAC-SHA256 algorithm. 

This token should never be transported over an unsecure network connection. If, for example, 
you have a separate management service that does token registration and renewal with the 
API and then pushes the token down to the device which generates OMF messages, make sure 
your network connection to the device is using SSL/TLS or other secure protocol. 

Because each OMF message contains the token, never send OMF data to a service that does not 
implement SSL/TLS or other secure protocol. It is recommended to keep token expiration times 
short and to have your application renew the token before it expires. For example, you could 
specify that the token expires after 24 hours and have your application renew the token every 
12 hours. By doing this, you limit the amount of time the token is valid in the event that 
it is compromised. 

Device API calls 
----------------

The API calls in this section are used to create and manipulate devices and generate security tokens.  



+-----------------+-------------------------+----------------------------------------+
| Property        | Type                    | Details                                |
+=================+=========================+========================================+
| TenantId        | string                  | Identifies the owner of the device.    |
+-----------------+-------------------------+----------------------------------------+
| DeviceId        | string                  | Unique ID generated by the API during  |
|                 |                         | creation.                              |
+-----------------+-------------------------+----------------------------------------+
| DeviceName      | string                  | A friendly name for the device.        |
+-----------------+-------------------------+----------------------------------------+
| Revoked         | boolean                 | A Device’s revocation will prevent any |
|                 |                         | client associated with that Device’s   |
|                 |                         | token from sending data.               |
+-----------------+-------------------------+----------------------------------------+
| ProducerToken   | string                  | A set of claims along with a           |
|                 |                         | cryptographic signature that verifies  |
|                 |                         | that the token is legitimate and has   |
|                 |                         | not been tampered with. It is used     |
|                 |                         | when building OMF messages that are    |
|                 |                         | sent to the OCS.                       |
+-----------------+-------------------------+----------------------------------------+
| TokenExpiration | string                  | The time that the ProducerToken will   |
|                 |                         | expire. It is in ISO 8601 format.      |
+-----------------+-------------------------+----------------------------------------+













